access_by_lua_block {
    local t1k = require "resty.t1k"
    local buffer = require "resty.t1k.buffer"
    local constants = require "resty.t1k.constants"
    local file = require "resty.t1k.file"
    local filter = require "resty.t1k.filter"
    local handler = require "resty.t1k.handler"
    local log = require "resty.t1k.log"
    local request = require "resty.t1k.request"
    local utils = require "resty.t1k.utils"
    local uuid = require "resty.t1k.uuid"

    local t = {
        mode = "block",
        host = "unix:/opt/detector/snserver.sock",
        port = 8000,
        connect_timeout = 1000,
        send_timeout = 1000,
        read_timeout = 1000,
        req_body_size = 1024,
        keepalive_size = 256,
        keepalive_timeout = 60000,
        remote_addr = "http_x_forwarded_for: 1",
    }

    local ok, err, _ = t1k.do_access(t, true)
    if not ok then
        ngx.log(ngx.ERR, err)
    end
}

header_filter_by_lua_block {
    local t1k = require "resty.t1k"
    t1k.do_header_filter()
}
